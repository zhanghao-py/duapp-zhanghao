<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/security 
                http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http pattern="/js/**" security="none" />
	<http pattern="/css/**" security="none" />
	<http pattern="/images/**" security="none" />

	<http entry-point-ref="forbiddenEntryPoint"
		access-decision-manager-ref="authorityAccessDecisionManager"
		authentication-manager-ref="authenticationManager">
		
    	<logout />
		
		<intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
		<intercept-url pattern="/**" access="ROLE_ADMIN,ROLE_USER" /> 
		
		<custom-filter before="BASIC_AUTH_FILTER" ref="userAuthFilter" />
		
	</http>
	
	<beans:bean id="authorityAccessDecisionManager"
        class="com.baidu.foo.ssh.core.web.filter.AuthorityAccessDecisionManager">
        <beans:property name="decisionVoters">
        	<beans:list>
        		<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
        	</beans:list>
        </beans:property>
    </beans:bean>
	
	<beans:bean id="forbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint">
	</beans:bean>
	
	<!--
	<beans:bean id="loginUrlEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/index.jsp" />
	</beans:bean>
	
	
	<beans:bean id="loginUrlEntryPoint" class="com.baidu.foo.ssh.core.web.filter.LoginUrlEntryPoint" />  
	-->
	<beans:bean id="userAuthFilter" class="com.baidu.foo.ssh.core.auth.web.filter.UserAuthFilter"/>

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<password-encoder hash="md5" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username, password, enabled from user where username = ?"
				authorities-by-username-query="select u.username, r.name from user u left join user_role ur on u.id = ur.uid left join role r on r.id = ur.rid where u.username = ?" />
		</authentication-provider>
	</authentication-manager>


</beans:beans>