<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!--  
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize" value="1" />
		<property name="maxPoolSize" value="1" />
		<property name="maxIdleTime" value="1800" />
		<property name="acquireIncrement" value="1" />
		<property name="maxStatements" value="0" />
		<property name="initialPoolSize" value="1" />
		<property name="idleConnectionTestPeriod" value="1800" />
		<property name="acquireRetryAttempts" value="6" />
		<property name="acquireRetryDelay" value="1000" />
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckout" value="true" />
		<property name="testConnectionOnCheckin" value="false" />
	</bean> 
	-->
	
	<bean id="abstractDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" abstract="true">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="minPoolSize" value="1" />
		<property name="maxPoolSize" value="1" />
		<property name="maxIdleTime" value="1800" />
		<property name="acquireIncrement" value="1" />
		<property name="maxStatements" value="0" />
		<property name="initialPoolSize" value="1" />
		<property name="idleConnectionTestPeriod" value="1800" />
		<property name="acquireRetryAttempts" value="6" />
		<property name="acquireRetryDelay" value="1000" />
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckout" value="true" />
		<property name="testConnectionOnCheckin" value="false" />
	</bean>

	<bean id="writeDataSource" parent="abstractDataSource">
		<property name="jdbcUrl" value="${jdbc.write.url}" />
		<property name="user" value="${jdbc.write.username}" />
		<property name="password" value="${jdbc.write.password}" />
	</bean>
	
	<bean id="read00DataSource" parent="abstractDataSource">
		<property name="jdbcUrl" value="${jdbc.read00.url}" />
		<property name="user" value="${jdbc.read00.username}" />
		<property name="password" value="${jdbc.read00.password}" />
	</bean>

	<bean id="dataSourceKeyHolder"
		class="com.baidu.foo.ssh.core.datasource.DataSourceKeyHolder"
		scope="singleton">
		<property name="writeKey" value="write" />
		<property name="readKeys">
			<list>
				<value>read00</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="com.baidu.foo.ssh.core.datasource.DynamicDataSource">
		<property name="dataSourceKeyHolder" ref="dataSourceKeyHolder" />
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="write" value-ref="writeDataSource" />
				<entry key="read00" value-ref="read00DataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="writeDataSource" />
	</bean>
	
	<bean id="dynamicDataSourceInterceptor" class="com.baidu.foo.ssh.core.datasource.DynamicDataSourceInterceptor">
		<property name="dataSourceKeyHolder" ref="dataSourceKeyHolder" />
		<property name="randomReadMethods">
			<list>
				<value>get*</value>
				<value>load*</value>
				<value>find*</value>
				<value>count*</value>
				<value>sum*</value>
				<value>is*</value>
			</list>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:config/mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.baidu.foo.ssh.**.dao" />
	</bean>  

	<!-- 声明式事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="count*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="sum*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="is*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED,-Throwable</prop>
			</props>
		</property>
	</bean>
	
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
		 		<value>*Service</value>
				<value>*Mgr</value>
				<value>*Facade</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>dynamicDataSourceInterceptor</value>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>


</beans>